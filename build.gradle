import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: "findbugs"

mainClassName = 'uk.gov.ons.fwmt.resource_service.ApplicationConfig'

description = "fwmt-resource-service"

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.13.RELEASE")
    }
}


repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.13.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.5.13.RELEASE'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.8'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.6.1'

    compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.4.6'
    compile group: 'ma.glasnost.orika', name: 'orika-eclipse-tools', version: '1.4.6'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.5"

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.9.RELEASE') {
        exclude(module: 'android-json')
    }
    testCompile 'org.springframework.security:spring-security-test:4.2.3.RELEASE'
    integrationTestCompile 'org.assertj:assertj-core:3.0.0'
}

processResources {
    filter ReplaceTokens, tokens: [
            "project.artifactId": "name",
            "project.version"   : "version",
            "scm.url"           : "url",
            "buildNumber"       : "buildnumber",
            "scmBranch"         : "branch",
            "timestamp"         : "timestamp",
    ]
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}


findbugs {
    ignoreFailures = false
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

task integrationTest(type: Test) {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}
check.dependsOn integrationTest
check.dependsOn jacocoTestReport
integrationTest.mustRunAfter test